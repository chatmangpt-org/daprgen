{
    "openapi": "3.0.0",
    "info": {
        "title": "OAuth 2.0",
        "license": {
            "name": "MIT",
            "url": "www.google.com"
        },
        "description": "Documentation for OAuth 2.0 API",
        "version": "1.0",
        "contact": {
            "name": "Gaurav",
            "email": "marketplace@gohighlevel.com",
            "url": "wwww.goighlevel.com"
        }
    },
    "tags": [
        {
            "name": "OAuth 2.0",
            "description": "Documentation for OAuth 2.0 API"
        }
    ],
    "servers": [
        {
            "url": "https://services.leadconnectorhq.com"
        }
    ],
    "components": {
        "securitySchemes": {
            "Location-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Location",
                "type": "http"
            },
            "Agency-Access": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "name": "Authorization",
                "in": "header",
                "description": "Use the Access Token generated with user type as Company",
                "type": "http"
            }
        },
        "schemas": {
            "BadRequestDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Bad Request"
                    }
                }
            },
            "UnauthorizedDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 401
                    },
                    "message": {
                        "type": "string",
                        "example": "Invalid token: access token is invalid"
                    },
                    "error": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                }
            },
            "GetAccessCodebodyDto": {
                "type": "object",
                "properties": {
                    "client_id": {
                        "type": "string",
                        "description": "The ID provided by GHL for your integration"
                    },
                    "client_secret": {
                        "type": "string"
                    },
                    "grant_type": {
                        "type": "string",
                        "enum": [
                            "authorization_code",
                            "refresh_token"
                        ]
                    },
                    "code": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "user_type": {
                        "type": "string",
                        "description": "The type of token to be requested",
                        "example": "Location",
                        "enum": [
                            "Company",
                            "Location"
                        ]
                    },
                    "redirect_uri": {
                        "type": "string",
                        "description": "The redirect URI for your application",
                        "example": "https://myapp.com/oauth/callback/gohighlevel"
                    }
                },
                "required": [
                    "client_id",
                    "client_secret",
                    "grant_type"
                ]
            },
            "GetAccessCodeSuccessfulResponseDto": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "example": "ab12dc0ae1234a7898f9ff06d4f69gh"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "type": "number",
                        "example": 86399
                    },
                    "refresh_token": {
                        "type": "string",
                        "example": "xy34dc0ae1234a4858f9ff06d4f66ba"
                    },
                    "scope": {
                        "type": "string",
                        "example": "conversations/message.readonly conversations/message.write"
                    },
                    "userType": {
                        "type": "string",
                        "example": "Location"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location ID - Present only for Sub-Account Access Token",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    },
                    "companyId": {
                        "type": "string",
                        "description": "Company ID",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    },
                    "approvedLocations": {
                        "description": "Approved locations to generate location access token",
                        "example": [
                            "l1C08ntBrFjLS0elLIYU"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userId": {
                        "type": "string",
                        "description": "USER ID - Represent user id of person who performed installation",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Plan Id of the subscribed plan in paid apps.",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    }
                },
                "required": [
                    "userId"
                ]
            },
            "UnprocessableDTO": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "number",
                        "example": 422
                    },
                    "message": {
                        "example": [
                            "Unprocessable Entity"
                        ],
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "error": {
                        "type": "string",
                        "example": "Unprocessable Entity"
                    }
                }
            },
            "GetLocationAccessCodeBodyDto": {
                "type": "object",
                "properties": {
                    "companyId": {
                        "type": "string",
                        "description": "Company Id of location you want to request token for"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "The location ID for which you want to obtain accessToken"
                    }
                },
                "required": [
                    "companyId",
                    "locationId"
                ]
            },
            "GetLocationAccessTokenSuccessfulResponseDto": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string",
                        "example": "ab12dc0ae1234a7898f9ff06d4f69gh",
                        "description": "Location access token which can be used to authenticate & authorize API under following scope"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "type": "number",
                        "example": 86399,
                        "description": "Time in seconds remaining for token to expire"
                    },
                    "scope": {
                        "type": "string",
                        "example": "conversations/message.readonly conversations/message.write",
                        "description": "Scopes the following accessToken have access to"
                    },
                    "locationId": {
                        "type": "string",
                        "description": "Location ID - Present only for Sub-Account Access Token",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    },
                    "userId": {
                        "type": "string",
                        "description": "USER ID - Represent user id of person who performed installation",
                        "example": "l1C08ntBrFjLS0elLIYU"
                    }
                },
                "required": [
                    "userId"
                ]
            },
            "InstalledLocationSchema": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "0IHuJvc2ofPAAA8GzTRi",
                        "description": "Location ID"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Deo",
                        "description": "Name of the location"
                    },
                    "address": {
                        "type": "string",
                        "example": "47 W 13th St, New York, NY 10011, USA",
                        "description": "Address linked to location"
                    },
                    "isInstalled": {
                        "type": "boolean",
                        "example": true,
                        "description": "Check if the requested app is installed for following location"
                    }
                },
                "required": [
                    "_id",
                    "name",
                    "address"
                ]
            },
            "GetInstalledLocationsSuccessfulResponseDto": {
                "type": "object",
                "properties": {
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstalledLocationSchema"
                        }
                    },
                    "count": {
                        "type": "number",
                        "example": 1231,
                        "description": "Total location count under the company"
                    },
                    "installToFutureLocations": {
                        "type": "boolean",
                        "description": "Boolean to control if user wants app to be automatically installed to future locations",
                        "example": true
                    }
                }
            }
        }
    },
    "paths": {
        "/oauth/token": {
            "post": {
                "operationId": "get-access-token",
                "summary": "Get Access Token",
                "description": "Use Access Tokens to access GoHighLevel resources on behalf of an authenticated location/company.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GetAccessCodebodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccessCodeSuccessfulResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "OAuth 2.0"
                ]
            }
        },
        "/oauth/locationToken": {
            "post": {
                "operationId": "get-location-access-token",
                "summary": "Get Location Access Token from Agency Token",
                "description": "This API allows you to generate locationAccessToken from AgencyAccessToken",
                "parameters": [
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GetLocationAccessCodeBodyDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetLocationAccessTokenSuccessfulResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "OAuth 2.0"
                ],
                "security": [
                    {
                        "Agency-Access": []
                    }
                ]
            }
        },
        "/oauth/installedLocations": {
            "get": {
                "operationId": "get-installed-location",
                "summary": "Get Location where app is installed",
                "description": "This API allows you fetch location where app is installed upon",
                "parameters": [
                    {
                        "name": "skip",
                        "required": false,
                        "in": "query",
                        "example": "1",
                        "description": "Parameter to skip the number installed locations",
                        "schema": {
                            "default": "0",
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "example": "10",
                        "description": "Parameter to limit the number installed locations",
                        "schema": {
                            "default": "20",
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "required": false,
                        "in": "query",
                        "example": "location name",
                        "description": "Parameter to search for the installed location by name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isInstalled",
                        "required": false,
                        "in": "query",
                        "example": true,
                        "description": "Filters out location which are installed for specified app under the specified company",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "companyId",
                        "required": true,
                        "in": "query",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "description": "Parameter to search by the companyId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "appId",
                        "required": true,
                        "in": "query",
                        "example": "tDtDnQdgm2LXpyiqYvZ6",
                        "description": "Parameter to search by the appId",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Version",
                        "in": "header",
                        "description": "API Version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "2021-07-28"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetInstalledLocationsSuccessfulResponseDto"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestDTO"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnprocessableDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "OAuth 2.0"
                ],
                "security": [
                    {
                        "Agency-Access": []
                    }
                ]
            }
        }
    }
}